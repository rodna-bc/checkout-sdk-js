{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///./src/coupon/map-to-internal-coupon.ts","webpack:///./src/common/error/errors/missing-data-error.ts","webpack:///./src/payment/payment-request-transformer.ts","webpack:///./src/payment/payment-request-sender.ts","webpack:///./src/coupon/map-to-internal-gift-certificate.ts","webpack:///./src/common/iframe/iframe-event-poster.ts","webpack:///./src/common/iframe/iframe-event-listener.ts","webpack:///./src/hosted-form/errors/invalid-hosted-form-config-error.ts","webpack:///./src/hosted-form/errors/invalid-hosted-form-value-error.ts","webpack:///./src/hosted-form/hosted-field-type.ts","webpack:///./src/hosted-form/iframe-content/map-to-autocomplete-type.ts","webpack:///./src/hosted-form/iframe-content/hosted-autocomplete-fieldset.ts","webpack:///./src/hosted-form/iframe-content/hosted-input.ts","webpack:///./src/hosted-form/iframe-content/hosted-card-expiry-input.ts","webpack:///./src/hosted-form/iframe-content/hosted-card-number-input.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-aggregator.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-payment-handler.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-validator.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-factory.ts","webpack:///./src/hosted-form/iframe-content/map-to-accessibility-label.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-initializer.ts","webpack:///./src/hosted-form/iframe-content/initialize-hosted-input.ts","webpack:///./src/hosted-form/iframe-content/notify-initialize-error.ts","webpack:///./src/bundles/hosted-form.ts","webpack:///external \"lodash\"","webpack:///./src/common/error/errors/standard-error.ts","webpack:///./src/common/utility/set-prototype-of.ts","webpack:///external \"rxjs\"","webpack:///external \"card-validator\"","webpack:///./src/payment/is-vaulted-instrument.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-events.ts","webpack:///./src/common/iframe/is-iframe-event.ts","webpack:///./src/common/error/errors/invalid-argument-error.ts","webpack:///./src/payment/payment-method-types.ts","webpack:///./src/address/map-to-internal-address.ts","webpack:///./src/billing/is-billing-address-like.ts","webpack:///./src/cart/map-to-internal-line-items.ts","webpack:///./src/cart/map-gift-certificate-to-internal-line-item.ts","webpack:///./src/hosted-form/hosted-field-events.ts","webpack:///./src/cart/map-to-internal-line-item.ts","webpack:///./src/shipping/map-to-internal-shipping-option.ts","webpack:///./src/common/utility/amount-transformer.ts","webpack:///external \"rxjs/operators\"","webpack:///./src/common/url/parse-url.ts","webpack:///external \"yup\"","webpack:///./src/common/utility/bind-decorator.ts","webpack:///./src/customer/map-to-internal-customer.ts","webpack:///./src/order/map-to-internal-order.ts","webpack:///./src/cart/map-to-internal-cart.ts","webpack:///./src/promotion/map-to-discount-notifications.ts","webpack:///external \"@bigcommerce/bigpay-client\"","webpack:///./src/hosted-form/iframe-content/card-expiry-formatter.ts","webpack:///./src/hosted-form/iframe-content/card-number-formatter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","couponTypes","mapToInternalCoupon","coupon","code","discount","displayName","discountType","indexOf","couponType","MissingDataErrorType","subtype","type","MissingBillingAddress","MissingCart","MissingConsignments","MissingCheckout","MissingCheckoutConfig","MissingOrderConfig","MissingOrder","MissingOrderId","MissingPayment","MissingPaymentToken","MissingPaymentMethod","MissingShippingAddress","getErrorMessage","_cardExpiryFormatter","_cardNumberFormatter","transform","payment","checkoutState","billingAddress","getBillingAddress","checkout","getCheckout","customer","getCustomer","order","getOrder","paymentMethod","paymentMethods","getPaymentMethod","methodId","gatewayId","shippingAddress","getShippingAddress","consignments","getConsignments","shippingOption","getShippingOption","storeConfig","config","getStoreConfig","contextConfig","getContextConfig","instrumentMeta","instruments","getInstrumentsMeta","paymentMeta","getPaymentMethodsMeta","orderMeta","getOrderMeta","internalCustomer","authToken","paymentData","getPaymentToken","vaultAccessToken","additionalAction","cart","this","_transformPaymentMethod","quoteMeta","request","geoCountryCode","source","store","storeProfile","transformWithHostedFormData","values","data","paymentMethodMeta","consignment","selectedShippingOption","_transformHostedInputValues","context","method","gateway","initializationData","id","ccCvv","cardCodeVerification","ccNumber","cardNumberVerification","unformat","cardCode","ccExpiry","toObject","cardExpiry","ccName","cardName","cardNumber","_client","submitPayment","payload","Promise","resolve","reject","error","response","_transformResponse","initializeOffsitePayment","target","headers","body","status","statusText","mapToInternalGiftCertificate","giftCertificate","discountedAmount","used","remainingBalance","remaining","balance","purchaseDate","targetOrigin","_targetWindow","_targetOrigin","origin","post","event","options","window","Error","result","pipe","successType","errorType","toPromise","postMessage","setTarget","sourceOrigin","_sourceOrigin","_isListening","_listeners","listen","addEventListener","_handleMessage","stopListen","removeEventListener","addListener","listener","listeners","push","removeListener","index","splice","trigger","forEach","message","errors","fieldErrors","join","HostedFieldType","mapToAutocompleteType","CardCode","CardExpiry","CardName","CardNumber","_form","_fieldTypes","_inputAggregator","_handleChange","targetInput","targetHostedInput","getInputs","find","input","_getAutocompleteElementId","getType","setValue","_inputs","map","_createInput","attach","appendChild","detach","parentElement","removeChild","document","createElement","autocomplete","tabIndex","style","position","opacity","zIndex","_type","_placeholder","_accessibilityLabel","_autocomplete","_styles","_fontUrls","_eventListener","_eventPoster","_inputValidator","_paymentHandler","_isTouched","_handleInput","_processChange","_handleBlur","_applyStyles","default","_validateForm","Blurred","fieldType","_handleFocus","focus","Focused","_handleValidate","_handleSubmit","preventDefault","Entered","_input","ValidateRequested","SubmitRequested","handle","_configureInput","getValue","isTouched","_loadFonts","parent","hostedInput","AttachSucceeded","_unloadFonts","_formatValue","_notifyChange","_value","Changed","backgroundColor","border","display","height","margin","outline","padding","width","placeholder","setAttribute","styles","allowedStyles","color","fontFamily","fontSize","fontWeight","keys","_fontLinks","filter","url","hostname","querySelector","link","rel","href","head","undefined","getInputValues","validate","results","isValid","Validated","_previousValue","form","accessibilityLabel","fontUrls","eventListener","eventPoster","inputAggregator","inputValidator","paymentHandler","_formatter","format","_autocompleteFieldset","cardInfo","card","prevCardInfo","CardTypeChanged","cardType","bin","length","isPotentiallyValid","substr","BinChanged","selectionEnd","formattedValue","setSelectionRange","_parentWindow","Array","slice","frames","reduce","frame","DOMException","_paymentRequestSender","_paymentRequestTransformer","SubmitFailed","SubmitSucceeded","_isPaymentErrorResponse","_cardInstrument","_configureCardValidator","requiredFields","schemas","_getCardCodeSchema","CardCodeVerification","_getCardCodeVerificationSchema","_getCardExpirySchema","_getCardNameSchema","_getCardNumberSchema","CardNumberVerification","_getCardNumberVerificationSchema","abortEarly","inner","innerError","path","discoverInfo","getTypeInfo","visaInfo","updateCard","lengths","patterns","required","test","size","_mapFromInstrumentCardType","brand","max","last4","_parentOrigin","cardInstrument","mapToAccessibilityLabel","_createNumberInput","_createExpiryInput","_createPaymentHandler","_factory","initialize","containerId","_createFormContainer","_resetPageStyles","AttachRequested","field","getElementById","node","overflow","container","button","noValidate","initializeHostedInput","parentOrigin","poster","notifyInitializeError","AttachFailed","setPrototypeOf","__proto__","captureStackTrace","stack","isVaultedInstrument","instrument","Boolean","instrumentId","isHostedVaultedInstrument","isFormattedVaultedInstrument","formattedInstrument","formattedPayload","bigpay_token","token","HostedInputEventType","isIframeEvent","HOSTED","OFFLINE","mapToInternalAddress","address","addressId","isBillingAddressLike","firstName","lastName","company","addressLine1","address1","addressLine2","address2","city","province","stateOrProvince","provinceCode","stateOrProvinceCode","postCode","postalCode","country","countryCode","phone","customFields","mapToInternalLineItems","itemMap","decimalPlaces","idKey","item","amountTransformer","imageUrl","amount","amountAfterDiscount","integerAmount","toInteger","integerAmountAfterDiscount","integerUnitPrice","integerUnitPriceAfterDiscount","integerDiscount","quantity","sender","recipient","attributes","variantId","mapGiftCertificateToInternalLineItem","mapToInternalLineItemType","HostedFieldEventType","mapToInternalLineItem","extendedListPrice","extendedSalePrice","discountAmount","listPrice","salePrice","downloadsPageUrl","downloadPageUrl","sku","categoryNames","productId","option","addedByPromotion","mapToInternalShippingOption","isSelected","description","price","cost","selected","isRecommended","transitTime","_decimalPlaces","Math","round","pow","parseUrl","anchor","port","hash","protocol","pathname","search","bindMethodDecorator","_","descriptor","boundMethod","set","decoratedTarget","getOwnPropertyNames","getOwnPropertyDescriptor","bindClassDecorator","mapToInternalCustomer","addresses","customerId","isGuest","storeCredit","email","fullName","customerGroupName","customerGroup","mapToInternalOrder","payments","items","currency","orderId","lineItems","customerCanBeCreated","mapToInternalOrderPayment","subtotal","baseAmount","coupons","sum","orderToken","callbackUrl","discountNotifications","providerId","totalDiscountedAmount","appliedGiftCertificates","detail","socialData","mapToInternalSocialDataList","hasDigitalItems","isDownloadable","isComplete","shipping","shippingCostTotal","amountBeforeDiscount","shippingCostBeforeDiscount","integerAmountBeforeDiscount","mapToStoreCredit","taxes","taxTotal","handling","handlingCostTotal","grandTotal","orderAmount","orderAmountAsInteger","mapToInternalPaymentStatus","isDefaultOrderPayment","step","helpText","instructions","returnUrl","socialDataObject","physicalItems","digitalItems","lineItem","socialMedia","image","shareText","text","sharingLink","channelName","channel","channelCode","mapToInternalCart","promotions","notifications","promotion","banners","banner","placeholders","messageHtml","giftCertificates","certificate","isShippingRequired","taxSubtotal","month","year","trimmedMonth","trimmedYear","maxLength","info","unformattedValue","gaps","gapIndex","output","replace","RegExp"],"mappings":"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","file":"hosted-form.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 189);\n","module.exports = require(\"tslib\");","import Coupon from './coupon';\nimport InternalCoupon from './internal-coupon';\n\nconst couponTypes = [\n    'per_item_discount',\n    'percentage_discount',\n    'per_total_discount',\n    'shipping_discount',\n    'free_shipping',\n];\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCoupon(coupon: Coupon): InternalCoupon {\n    return {\n        code: coupon.code,\n        discount: coupon.displayName,\n        discountType: couponTypes.indexOf(coupon.couponType),\n    };\n}\n","import StandardError from './standard-error';\n\nexport enum MissingDataErrorType {\n    MissingBillingAddress,\n    MissingCart,\n    MissingCheckout,\n    MissingConsignments,\n    MissingCheckoutConfig,\n    MissingOrder,\n    MissingOrderConfig,\n    MissingOrderId,\n    MissingPayment,\n    MissingPaymentInstrument,\n    MissingPaymentMethod,\n    MissingPaymentToken,\n    MissingShippingAddress,\n}\n\n/**\n * Throw this error when data that is expected to exist is missing. Usually it\n * is due to the fact that certain data has not been retrieved from or saved to\n * the server yet. And such data is required to perform certain actions.\n */\nexport default class MissingDataError extends StandardError {\n    constructor(\n        public subtype: MissingDataErrorType\n    ) {\n        super(getErrorMessage(subtype));\n\n        this.name = 'MissingDataError';\n        this.type = 'missing_data';\n    }\n}\n\nfunction getErrorMessage(type: MissingDataErrorType): string {\n    switch (type) {\n    case MissingDataErrorType.MissingBillingAddress:\n        return 'Unable to proceed because billing address data is unavailable.';\n\n    case MissingDataErrorType.MissingCart:\n        return 'Unable to proceed because cart data is unavailable.';\n\n    case MissingDataErrorType.MissingConsignments:\n        return 'Unable to proceed because consignments data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckout:\n        return 'Unable to proceed because checkout data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckoutConfig:\n    case MissingDataErrorType.MissingOrderConfig:\n        return 'Unable to proceed because configuration data is unavailable.';\n\n    case MissingDataErrorType.MissingOrder:\n        return 'Unable to proceed because order data is unavailable.';\n\n    case MissingDataErrorType.MissingOrderId:\n        return 'Unable to proceed because order ID is unavailable or not generated yet.';\n\n    case MissingDataErrorType.MissingPayment:\n        return 'Unable to proceed because payment data is unavailable.';\n\n    case MissingDataErrorType.MissingPaymentToken:\n        return 'Unable to proceed because the token required to submit a payment is missing.';\n\n    case MissingDataErrorType.MissingPaymentMethod:\n        return 'Unable to proceed because payment method data is unavailable or not properly configured.';\n\n    case MissingDataErrorType.MissingShippingAddress:\n        return 'Unable to proceed because shipping address data is unavailable.';\n\n    default:\n        return 'Unable to proceed because the required data is unavailable.';\n    }\n}\n","import { pick } from 'lodash';\n\nimport { mapToInternalAddress } from '../address';\nimport { mapToInternalCart } from '../cart';\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { mapToInternalCustomer } from '../customer';\nimport { HostedFormOrderData } from '../hosted-form';\nimport { CardExpiryFormatter, CardNumberFormatter, HostedInputValues } from '../hosted-form/iframe-content';\nimport { mapToInternalOrder } from '../order';\nimport { mapToInternalShippingOption } from '../shipping';\n\nimport isVaultedInstrument, { isFormattedVaultedInstrument } from './is-vaulted-instrument';\nimport Payment, { CreditCardInstrument, HostedCreditCardInstrument, HostedVaultedInstrument, VaultedInstrument } from './payment';\nimport PaymentMethod from './payment-method';\nimport PaymentRequestBody from './payment-request-body';\n\nexport default class PaymentRequestTransformer {\n    private _cardExpiryFormatter = new CardExpiryFormatter();\n    private _cardNumberFormatter = new CardNumberFormatter();\n\n    transform(payment: Payment, checkoutState: InternalCheckoutSelectors): PaymentRequestBody {\n        const billingAddress = checkoutState.billingAddress.getBillingAddress();\n        const checkout = checkoutState.checkout.getCheckout();\n        const customer = checkoutState.customer.getCustomer();\n        const order = checkoutState.order.getOrder();\n        const paymentMethod = checkoutState.paymentMethods.getPaymentMethod(payment.methodId, payment.gatewayId);\n        const shippingAddress = checkoutState.shippingAddress.getShippingAddress();\n        const consignments = checkoutState.consignments.getConsignments();\n        const shippingOption = checkoutState.consignments.getShippingOption();\n        const storeConfig = checkoutState.config.getStoreConfig();\n        const contextConfig = checkoutState.config.getContextConfig();\n        const instrumentMeta = checkoutState.instruments.getInstrumentsMeta();\n        const paymentMeta = checkoutState.paymentMethods.getPaymentMethodsMeta();\n        const orderMeta = checkoutState.order.getOrderMeta();\n        const internalCustomer = customer && billingAddress && mapToInternalCustomer(customer, billingAddress);\n\n        const authToken = instrumentMeta && payment.paymentData &&\n            (isVaultedInstrument(payment.paymentData) || isFormattedVaultedInstrument(payment.paymentData)) ?\n            `${checkoutState.payment.getPaymentToken()}, ${instrumentMeta.vaultAccessToken}` :\n            checkoutState.payment.getPaymentToken();\n\n        if (!authToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentToken);\n        }\n\n        return {\n            additionalAction: payment.additionalAction,\n            authToken,\n            customer: internalCustomer,\n            billingAddress: billingAddress && mapToInternalAddress(billingAddress),\n            shippingAddress: shippingAddress && mapToInternalAddress(shippingAddress, consignments),\n            shippingOption: shippingOption && mapToInternalShippingOption(shippingOption, true),\n            cart: checkout && mapToInternalCart(checkout),\n            order: order && mapToInternalOrder(order, orderMeta),\n            orderMeta,\n            payment: payment.paymentData,\n            paymentMethod: paymentMethod && this._transformPaymentMethod(paymentMethod),\n            quoteMeta: {\n                request: {\n                    ...paymentMeta,\n                    geoCountryCode: contextConfig && contextConfig.geoCountryCode,\n                },\n            },\n            source: 'bigcommerce-checkout-js-sdk',\n            store: pick(storeConfig && storeConfig.storeProfile, [\n                'storeHash',\n                'storeId',\n                'storeLanguage',\n                'storeName',\n            ]),\n        };\n    }\n\n    transformWithHostedFormData(values: HostedInputValues, data: HostedFormOrderData): PaymentRequestBody {\n        const { authToken, checkout, config, order, orderMeta, payment = {}, paymentMethod, paymentMethodMeta } = data;\n        const consignment = checkout && checkout.consignments[0];\n        const shippingAddress = consignment && consignment.shippingAddress;\n        const shippingOption = consignment && consignment.selectedShippingOption;\n\n        return {\n            authToken,\n            paymentMethod: paymentMethod && this._transformPaymentMethod(paymentMethod),\n            customer: order && order.billingAddress && checkout && mapToInternalCustomer(checkout.customer, order.billingAddress),\n            billingAddress: order && order.billingAddress && mapToInternalAddress(order.billingAddress),\n            shippingAddress: shippingAddress && checkout && mapToInternalAddress(shippingAddress, checkout.consignments),\n            shippingOption: shippingOption && mapToInternalShippingOption(shippingOption, true),\n            cart: checkout && mapToInternalCart(checkout),\n            order: order && mapToInternalOrder(order, orderMeta),\n            orderMeta,\n            payment: this._transformHostedInputValues(values, payment),\n            quoteMeta: {\n                request: {\n                    ...paymentMethodMeta,\n                    geoCountryCode: config && config.context.geoCountryCode,\n                },\n            },\n            source: 'bigcommerce-checkout-js-sdk',\n            store: config && pick(config.storeConfig.storeProfile, [\n                'storeHash',\n                'storeId',\n                'storeLanguage',\n                'storeName',\n            ]),\n        };\n    }\n\n    private _transformPaymentMethod(paymentMethod: PaymentMethod): PaymentMethod {\n        if (paymentMethod.method === 'multi-option' && !paymentMethod.gateway) {\n            return { ...paymentMethod, gateway: paymentMethod.id };\n        }\n\n        if (paymentMethod.initializationData && paymentMethod.initializationData.gateway) {\n            return { ...paymentMethod, id: paymentMethod.initializationData.gateway };\n        }\n\n        return paymentMethod;\n    }\n\n    private _transformHostedInputValues(values: HostedInputValues, payment: HostedCreditCardInstrument | HostedVaultedInstrument): CreditCardInstrument | VaultedInstrument {\n        return 'instrumentId' in payment ?\n            {\n                ...payment,\n                ccCvv: values.cardCodeVerification,\n                ccNumber: values.cardNumberVerification && this._cardNumberFormatter.unformat(values.cardNumberVerification),\n            } :\n            {\n                ...payment,\n                ccCvv: values.cardCode,\n                ccExpiry: this._cardExpiryFormatter.toObject(values.cardExpiry || ''),\n                ccName: values.cardName || '',\n                ccNumber: this._cardNumberFormatter.unformat(values.cardNumber || ''),\n            };\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport PaymentRequestBody from './payment-request-body';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class PaymentRequestSender {\n    /**\n     * @constructor\n     * @param {BigpayClient} client\n     */\n    constructor(\n        private _client: any\n    ) {}\n\n    submitPayment(payload: PaymentRequestBody): Promise<Response> {\n        return new Promise((resolve, reject) => {\n            this._client.submitPayment(payload, (error: any, response: any) => {\n                if (error) {\n                    reject(this._transformResponse(error));\n                } else {\n                    resolve(this._transformResponse(response));\n                }\n            });\n        });\n    }\n\n    initializeOffsitePayment(payload: PaymentRequestBody, target?: string): Promise<void> {\n        return new Promise(() => {\n            this._client.initializeOffsitePayment(payload, null, target);\n        });\n    }\n\n    private _transformResponse(response: any): Response {\n        return {\n            headers: response.headers,\n            body: response.data,\n            status: response.status,\n            statusText: response.statusText,\n        };\n    }\n}\n","import GiftCertificate from './gift-certificate';\nimport InternalGiftCertificate from './internal-gift-certificate';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalGiftCertificate(giftCertificate: GiftCertificate): InternalGiftCertificate {\n    return {\n        code: giftCertificate.code,\n        discountedAmount: giftCertificate.used,\n        remainingBalance: giftCertificate.remaining,\n        giftCertificate: {\n            balance: giftCertificate.balance,\n            code: giftCertificate.code,\n            purchaseDate: giftCertificate.purchaseDate,\n        },\n    };\n}\n","import { fromEvent } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { parseUrl } from '../url';\n\nimport IframeEvent from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport interface IframeEventPostOptions<TSuccessEvent extends IframeEvent, TErrorEvent extends IframeEvent> {\n    errorType?: TErrorEvent['type'];\n    successType?: TSuccessEvent['type'];\n}\n\nexport default class IframeEventPoster<TEvent> {\n    private _targetOrigin: string;\n\n    constructor(\n        targetOrigin: string,\n        private _targetWindow?: Window\n    ) {\n        this._targetOrigin = targetOrigin === '*' ? '*' : parseUrl(targetOrigin).origin;\n    }\n\n    post(event: TEvent): void;\n    post<TSuccessEvent extends IframeEvent = IframeEvent, TErrorEvent extends IframeEvent = IframeEvent>(\n        event: TEvent,\n        options: IframeEventPostOptions<TSuccessEvent, TErrorEvent>\n    ): Promise<TSuccessEvent>;\n    post<TSuccessEvent extends IframeEvent = IframeEvent, TErrorEvent extends IframeEvent = IframeEvent>(\n        event: TEvent,\n        options?: IframeEventPostOptions<TSuccessEvent, TErrorEvent>\n    ): Promise<TSuccessEvent> | void {\n        if (window === this._targetWindow) {\n            return;\n        }\n\n        if (!this._targetWindow) {\n            throw new Error('Unable to post message because target window is not set.');\n        }\n\n        const result = options && fromEvent<MessageEvent>(window, 'message')\n            .pipe(\n                filter(event =>\n                    event.origin === this._targetOrigin &&\n                    isIframeEvent(event.data, event.data.type) &&\n                    [options.successType, options.errorType].indexOf(event.data.type) !== -1\n                ),\n                map(event => {\n                    if (options.errorType === event.data.type) {\n                        throw event.data;\n                    }\n\n                    return event.data;\n                }),\n                take(1)\n            )\n            .toPromise();\n\n        this._targetWindow.postMessage(event, this._targetOrigin);\n\n        return result;\n    }\n\n    setTarget(window: Window) {\n        this._targetWindow = window;\n    }\n}\n","import { parseUrl } from '../url';\nimport { bindDecorator as bind } from '../utility';\n\nimport { IframeEventMap } from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport default class IframeEventListener<TEventMap extends IframeEventMap<keyof TEventMap>> {\n    private _isListening: boolean;\n    private _listeners: EventListeners<TEventMap>;\n    private _sourceOrigin: string;\n\n    constructor(\n        sourceOrigin: string\n    ) {\n        this._sourceOrigin = parseUrl(sourceOrigin).origin;\n        this._isListening = false;\n        this._listeners = {};\n    }\n\n    listen(): void {\n        if (this._isListening) {\n            return;\n        }\n\n        this._isListening = true;\n\n        window.addEventListener('message', this._handleMessage);\n    }\n\n    stopListen(): void {\n        if (!this._isListening) {\n            return;\n        }\n\n        this._isListening = false;\n\n        window.removeEventListener('message', this._handleMessage);\n    }\n\n    addListener<TType extends keyof TEventMap>(type: TType, listener: (event: TEventMap[TType]) => void): void {\n        let listeners = this._listeners[type];\n\n        if (!listeners) {\n            this._listeners[type] = listeners = [];\n        }\n\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    }\n\n    removeListener<TType extends keyof TEventMap>(type: TType, listener: (event: TEventMap[TType]) => void): void {\n        const listeners = this._listeners[type];\n\n        if (!listeners) {\n            return;\n        }\n\n        const index = listeners.indexOf(listener);\n\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n\n    trigger<TType extends keyof TEventMap>(event: TEventMap[TType]): void {\n        const listeners = this._listeners[event.type];\n\n        if (!listeners) {\n            return;\n        }\n\n        listeners.forEach(listener => listener(event));\n    }\n\n    @bind\n    private _handleMessage(event: MessageEvent): void {\n        if ((event.origin !== this._sourceOrigin) ||\n            !isIframeEvent(event.data as TEventMap[keyof TEventMap], event.data.type)\n        ) {\n            return;\n        }\n\n        this.trigger(event.data);\n    }\n}\n\ntype EventListeners<TEventMap> = {\n    [key in keyof TEventMap]?: Array<(event: TEventMap[key]) => void>;\n};\n","import { StandardError } from '../../common/error/errors';\n\nexport default class InvalidHostedFormConfigError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to proceed due to invalid configuration provided for the hosted payment form.');\n\n        this.name = 'InvalidHostedFormConfigError';\n        this.type = 'invalid_hosted_form_config';\n    }\n}\n","import { flatMap, map, values } from 'lodash';\n\nimport { StandardError } from '../../common/error/errors';\nimport { HostedInputValidateErrorDataMap } from '../iframe-content';\n\nexport default class InvalidHostedFormValueError extends StandardError {\n    constructor(\n        public errors: HostedInputValidateErrorDataMap\n    ) {\n        super([\n            'Unable to proceed due to invalid user input values',\n            ...flatMap(values(errors), fieldErrors => map(fieldErrors, ({ message }) => message)),\n        ].join('. '));\n\n        this.name = 'InvalidHostedFormValueError';\n        this.type = 'invalid_hosted_form_value';\n    }\n}\n","enum HostedFieldType {\n    CardCode = 'cardCode',\n    CardCodeVerification = 'cardCodeVerification',\n    CardExpiry = 'cardExpiry',\n    CardName = 'cardName',\n    CardNumber = 'cardNumber',\n    CardNumberVerification = 'cardNumberVerification',\n}\n\nexport default HostedFieldType;\n","import HostedFieldType from '../hosted-field-type';\n\nexport default function mapToAutocompleteType(type: HostedFieldType): string {\n    switch (type) {\n    case HostedFieldType.CardCode:\n        return 'cc-csc';\n\n    case HostedFieldType.CardExpiry:\n        return 'cc-exp';\n\n    case HostedFieldType.CardName:\n        return 'cc-name';\n\n    case HostedFieldType.CardNumber:\n        return 'cc-number';\n\n    default:\n        return '';\n    }\n}\n","import { kebabCase } from 'lodash';\n\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport mapToAutocompleteType from './map-to-autocomplete-type';\n\nexport default class HostedAutocompleteFieldset {\n    private _inputs: HTMLInputElement[];\n\n    constructor(\n        private _form: HTMLFormElement,\n        private _fieldTypes: HostedFieldType[],\n        private _inputAggregator: HostedInputAggregator\n    ) {\n        this._inputs = this._fieldTypes.map(type => this._createInput(type));\n    }\n\n    attach(): void {\n        this._inputs.forEach(input => this._form.appendChild(input));\n    }\n\n    detach(): void {\n        this._inputs.forEach(input => {\n            if (!input.parentElement) {\n                return;\n            }\n\n            input.parentElement.removeChild(input);\n        });\n    }\n\n    private _createInput(type: HostedFieldType): HTMLInputElement {\n        const input = document.createElement('input');\n\n        input.autocomplete = mapToAutocompleteType(type);\n        input.id = this._getAutocompleteElementId(type);\n        input.tabIndex = -1;\n        input.style.position = 'absolute';\n        input.style.opacity = '0';\n        input.style.zIndex = '-1';\n\n        input.addEventListener('change', this._handleChange);\n\n        return input;\n    }\n\n    private _handleChange: (event: Event) => void = event => {\n        const targetInput = event.target as HTMLInputElement;\n\n        if (!targetInput) {\n            throw new Error('Unable to get a reference to the target of the change event.');\n        }\n\n        const targetHostedInput = this._inputAggregator.getInputs()\n            .find(input => this._getAutocompleteElementId(input.getType()) === targetInput.id);\n\n        if (!targetHostedInput) {\n            return;\n        }\n\n        targetHostedInput.setValue(targetInput.value);\n    };\n\n    private _getAutocompleteElementId(type: HostedFieldType): string {\n        return `autocomplete-${kebabCase(type)}`;\n    }\n}\n","import { kebabCase } from 'lodash';\n\nimport { IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { parseUrl } from '../../common/url';\nimport { HostedFieldEventMap, HostedFieldEventType, HostedFieldValidateRequestEvent } from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\nimport HostedInputStyles, { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\nimport HostedInputWindow from './hosted-input-window';\n\nexport default class HostedInput {\n    protected _input: HTMLInputElement;\n    protected _previousValue?: string;\n    private _fontLinks?: HTMLLinkElement[];\n    private _isTouched: boolean = false;\n\n    /**\n     * @internal\n     */\n    constructor(\n        protected _type: HostedFieldType,\n        protected _form: HTMLFormElement,\n        protected _placeholder: string,\n        protected _accessibilityLabel: string,\n        protected _autocomplete: string,\n        protected _styles: HostedInputStylesMap,\n        protected _fontUrls: string[],\n        protected _eventListener: IframeEventListener<HostedFieldEventMap>,\n        protected _eventPoster: IframeEventPoster<HostedInputEvent>,\n        protected _inputAggregator: HostedInputAggregator,\n        protected _inputValidator: HostedInputValidator,\n        protected _paymentHandler: HostedInputPaymentHandler\n    ) {\n        this._input = document.createElement('input');\n\n        this._input.addEventListener('input', this._handleInput);\n        this._input.addEventListener('blur', this._handleBlur);\n        this._input.addEventListener('focus', this._handleFocus);\n        this._eventListener.addListener(HostedFieldEventType.ValidateRequested, this._handleValidate);\n        this._eventListener.addListener(HostedFieldEventType.SubmitRequested, this._paymentHandler.handle);\n\n        this._configureInput();\n    }\n\n    getType(): HostedFieldType {\n        return this._type;\n    }\n\n    getValue(): string {\n        return this._input.value;\n    }\n\n    setValue(value: string): void {\n        this._processChange(value);\n    }\n\n    isTouched(): boolean {\n        return this._isTouched;\n    }\n\n    attach(): void {\n        this._form.appendChild(this._input);\n        this._form.addEventListener('submit', this._handleSubmit);\n\n        this._loadFonts();\n\n        this._eventPoster.setTarget(window.parent);\n        this._eventListener.listen();\n\n        // Assign itself to the global so it can be accessed by its sibling frames\n        (window as unknown as HostedInputWindow).hostedInput = this;\n\n        this._eventPoster.post({ type: HostedInputEventType.AttachSucceeded });\n    }\n\n    detach(): void {\n        if (this._input.parentElement) {\n            this._input.parentElement.removeChild(this._input);\n        }\n\n        this._form.removeEventListener('submit', this._handleSubmit);\n        this._unloadFonts();\n\n        this._eventListener.stopListen();\n    }\n\n    protected _formatValue(value: string): void {\n        this._input.value = value;\n    }\n\n    protected _notifyChange(_value: string): void {\n        this._eventPoster.post({\n            type: HostedInputEventType.Changed,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    }\n\n    private _configureInput(): void {\n        this._input.style.backgroundColor = 'transparent';\n        this._input.style.border = '0';\n        this._input.style.display = 'block';\n        this._input.style.height = '100%';\n        this._input.style.margin = '0';\n        this._input.style.outline = 'none';\n        this._input.style.padding = '0';\n        this._input.style.width = '100%';\n        this._input.id = kebabCase(this._type);\n        this._input.placeholder = this._placeholder;\n        this._input.autocomplete = this._autocomplete;\n\n        this._input.setAttribute('aria-label', this._accessibilityLabel);\n\n        this._applyStyles(this._styles.default);\n    }\n\n    private _applyStyles(styles: HostedInputStyles = {}): void {\n        const allowedStyles: { [key in keyof Required<HostedInputStyles>]: HostedInputStyles[key] } = {\n            color: styles.color,\n            fontFamily: styles.fontFamily,\n            fontSize: styles.fontSize,\n            fontWeight: styles.fontWeight,\n        };\n        const styleKeys = Object.keys(allowedStyles) as Array<keyof HostedInputStyles>;\n\n        styleKeys.forEach(key => {\n            if (!allowedStyles[key]) {\n                return;\n            }\n\n            this._input.style[key] = allowedStyles[key] || '';\n        });\n    }\n\n    private _loadFonts(): void {\n        if (this._fontLinks) {\n            return;\n        }\n\n        this._fontLinks = this._fontUrls\n            .filter(url => parseUrl(url).hostname === 'fonts.googleapis.com')\n            .filter(url => !document.querySelector(`link[href='${url}'][rel='stylesheet']`))\n            .map(url => {\n                const link = document.createElement('link');\n\n                link.rel = 'stylesheet';\n                link.href = url;\n\n                document.head.appendChild(link);\n\n                return link;\n            });\n    }\n\n    private _unloadFonts(): void {\n        if (!this._fontLinks) {\n            return;\n        }\n\n        this._fontLinks.forEach(link => {\n            if (!link.parentElement) {\n                return;\n            }\n\n            link.parentElement.removeChild(link);\n        });\n\n        this._fontLinks = undefined;\n    }\n\n    private async _validateForm(): Promise<void> {\n        const values = this._inputAggregator.getInputValues();\n        const results = await this._inputValidator.validate(values);\n\n        if (results.isValid) {\n            this._applyStyles(this._styles.default);\n        } else {\n            this._applyStyles(this._styles.error);\n        }\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Validated,\n            payload: results,\n        });\n    }\n\n    private _processChange(value: string): void {\n        if (value === this._previousValue) {\n            return;\n        }\n\n        this._isTouched = true;\n\n        this._formatValue(value);\n        this._validateForm();\n        this._notifyChange(value);\n\n        this._previousValue = value;\n    }\n\n    private _handleInput: (event: Event) => void = event => {\n        const input = event.target as HTMLInputElement;\n\n        this._processChange(input.value);\n    };\n\n    private _handleBlur: (event: Event) => void = () => {\n        this._applyStyles(this._styles.default);\n        this._validateForm();\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Blurred,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    };\n\n    private _handleFocus: (event: Event) => void = () => {\n        this._applyStyles(this._styles.focus);\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Focused,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    };\n\n    private _handleValidate: (event: HostedFieldValidateRequestEvent) => void = () => {\n        this._validateForm();\n    };\n\n    private _handleSubmit: (event: Event) => void = event => {\n        event.preventDefault();\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Entered,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    };\n}\n","import { IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport CardExpiryFormatter from './card-expiry-formatter';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent } from './hosted-input-events';\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedCardExpiryInput extends HostedInput {\n    /**\n     * @internal\n     */\n    constructor(\n        form: HTMLFormElement,\n        placeholder: string,\n        accessibilityLabel: string,\n        autocomplete: string,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        eventListener: IframeEventListener<HostedFieldEventMap>,\n        eventPoster: IframeEventPoster<HostedInputEvent>,\n        inputAggregator: HostedInputAggregator,\n        inputValidator: HostedInputValidator,\n        paymentHandler: HostedInputPaymentHandler,\n        private _formatter: CardExpiryFormatter\n    ) {\n        super(\n            HostedFieldType.CardExpiry,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            eventListener,\n            eventPoster,\n            inputAggregator,\n            inputValidator,\n            paymentHandler\n        );\n    }\n\n    protected _formatValue(value: string): void {\n        this._input.value = this._formatter.format(value);\n    }\n}\n","import { number } from 'card-validator';\nimport { get } from 'lodash';\n\nimport { IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport CardNumberFormatter from './card-number-formatter';\nimport HostedAutocompleteFieldset from './hosted-autocomplete-fieldset';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedCardNumberInput extends HostedInput {\n    /**\n     * @internal\n     */\n    constructor(\n        form: HTMLFormElement,\n        placeholder: string,\n        accessibilityLabel: string,\n        autocomplete: string,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        eventListener: IframeEventListener<HostedFieldEventMap>,\n        eventPoster: IframeEventPoster<HostedInputEvent>,\n        inputAggregator: HostedInputAggregator,\n        inputValidator: HostedInputValidator,\n        paymentHandler: HostedInputPaymentHandler,\n        private _autocompleteFieldset: HostedAutocompleteFieldset,\n        private _formatter: CardNumberFormatter\n    ) {\n        super(\n            HostedFieldType.CardNumber,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            eventListener,\n            eventPoster,\n            inputAggregator,\n            inputValidator,\n            paymentHandler\n        );\n    }\n\n    attach(): void {\n        super.attach();\n\n        this._autocompleteFieldset.attach();\n    }\n\n    protected _notifyChange(value: string): void {\n        const cardInfo = number(value).card;\n        const prevCardInfo = this._previousValue && number(this._previousValue).card;\n\n        if (get(prevCardInfo, 'type') !== get(cardInfo, 'type')) {\n            this._eventPoster.post({\n                type: HostedInputEventType.CardTypeChanged,\n                payload: {\n                    cardType: cardInfo ? cardInfo.type : undefined,\n                },\n            });\n        }\n\n        const bin = value.length >= 6 && number(value).isPotentiallyValid ? value.substr(0, 6) : '';\n        const prevBin = this._previousValue && this._previousValue.length >= 6 ? this._previousValue.substr(0, 6) : '';\n\n        if (bin !== prevBin) {\n            this._eventPoster.post({\n                type: HostedInputEventType.BinChanged,\n                payload: { bin },\n            });\n        }\n    }\n\n    protected _formatValue(value: string): void {\n        const selectionEnd = this._input.selectionEnd;\n        const formattedValue = this._formatter.format(value);\n\n        if (selectionEnd === value.length && value.length < formattedValue.length) {\n            this._input.setSelectionRange(formattedValue.length, formattedValue.length);\n        } else {\n            this._input.setSelectionRange(selectionEnd || 0, selectionEnd || 0);\n        }\n\n        this._input.value = formattedValue;\n    }\n}\n","import HostedInput from './hosted-input';\nimport HostedInputValues from './hosted-input-values';\nimport HostedInputWindow from './hosted-input-window';\n\nexport default class HostedInputAggregator {\n    constructor(\n        private _parentWindow: Window\n    ) {}\n\n    getInputs(filter?: (field: HostedInput) => boolean): HostedInput[] {\n        return Array.prototype.slice.call(this._parentWindow.frames)\n            .reduce((result: Window[], frame: Window) => {\n                try {\n                    const input = (frame as HostedInputWindow).hostedInput;\n\n                    if (!input || (filter && !filter(input))) {\n                        return result;\n                    }\n\n                    return [...result, input];\n                } catch (error) {\n                    if (error instanceof DOMException) {\n                        return result;\n                    }\n\n                    throw error;\n                }\n            }, []);\n    }\n\n    getInputValues(filter?: (field: HostedInput) => boolean): HostedInputValues {\n        return this.getInputs(filter)\n            .reduce((result, input) => {\n                return {\n                    ...result,\n                    [input.getType()]: input.getValue(),\n                };\n            }, {} as HostedInputValues);\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\nimport { snakeCase } from 'lodash';\n\nimport { PaymentErrorResponseBody } from '../../common/error';\nimport { IframeEventPoster } from '../../common/iframe';\nimport { PaymentRequestSender, PaymentRequestTransformer } from '../../payment';\nimport { InvalidHostedFormValueError } from '../errors';\nimport { HostedFieldSubmitRequestEvent } from '../hosted-field-events';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedInputPaymentHandler {\n    constructor(\n        private _inputAggregator: HostedInputAggregator,\n        private _inputValidator: HostedInputValidator,\n        private _eventPoster: IframeEventPoster<HostedInputEvent>,\n        private _paymentRequestSender: PaymentRequestSender,\n        private _paymentRequestTransformer: PaymentRequestTransformer\n    ) {}\n\n    handle: (event: HostedFieldSubmitRequestEvent) => Promise<void> = async ({ payload: { data } }) => {\n        const values = this._inputAggregator.getInputValues();\n        const results = await this._inputValidator.validate(values);\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Validated,\n            payload: results,\n        });\n\n        if (!results.isValid) {\n            const error = new InvalidHostedFormValueError(results.errors);\n\n            return this._eventPoster.post({\n                type: HostedInputEventType.SubmitFailed,\n                payload: {\n                    error: { code: snakeCase(error.name), message: error.message },\n                },\n            });\n        }\n\n        try {\n            await this._paymentRequestSender.submitPayment(this._paymentRequestTransformer.transformWithHostedFormData(values, data));\n\n            this._eventPoster.post({ type: HostedInputEventType.SubmitSucceeded });\n        } catch (error) {\n            this._eventPoster.post({\n                type: HostedInputEventType.SubmitFailed,\n                payload: this._isPaymentErrorResponse(error) ?\n                    { error: error.body.errors[0], response: error } :\n                    { error: { code: snakeCase(error.name), message: error.message } },\n            });\n        }\n    };\n\n    private _isPaymentErrorResponse(response: any): response is Response<PaymentErrorResponseBody> {\n        const { body: { errors = [] } = {} } = response || {};\n\n        return (\n            typeof (errors[0] && errors[0].code) === 'string' &&\n            typeof (errors[0] && errors[0].message) === 'string'\n        );\n    }\n}\n","import { creditCardType, cvv, expirationDate, number } from 'card-validator';\nimport { includes } from 'lodash';\nimport { object, string, StringSchema, ValidationError } from 'yup';\n\nimport { CardInstrument } from '../../payment/instrument';\nimport HostedFieldType from '../hosted-field-type';\n\nimport { HostedInputValidateErrorDataMap } from './hosted-input-validate-error-data';\nimport HostedInputValidateResults from './hosted-input-validate-results';\nimport HostedInputValues from './hosted-input-values';\n\nexport default class HostedInputValidator {\n    constructor(\n        private _cardInstrument?: CardInstrument\n    ) {\n        this._configureCardValidator();\n    }\n\n    async validate(values: HostedInputValues): Promise<HostedInputValidateResults> {\n        const requiredFields = Object.keys(values);\n        const schemas: { [key in keyof HostedInputValues]: StringSchema } = {};\n        const results: HostedInputValidateResults = {\n            errors: {},\n            isValid: true,\n        };\n\n        if (includes(requiredFields, HostedFieldType.CardCode)) {\n            schemas.cardCode = this._getCardCodeSchema();\n            results.errors.cardCode = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardCodeVerification)) {\n            schemas.cardCodeVerification = this._getCardCodeVerificationSchema();\n            results.errors.cardCodeVerification = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardExpiry)) {\n            schemas.cardExpiry = this._getCardExpirySchema();\n            results.errors.cardExpiry = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardName)) {\n            schemas.cardName = this._getCardNameSchema();\n            results.errors.cardName = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardNumber)) {\n            schemas.cardNumber = this._getCardNumberSchema();\n            results.errors.cardNumber = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardNumberVerification)) {\n            schemas.cardNumberVerification = this._getCardNumberVerificationSchema();\n            results.errors.cardNumberVerification = [];\n        }\n\n        try {\n            await object(schemas)\n                .validate(values, { abortEarly: false });\n\n            return results;\n        } catch (error) {\n            if (error.name !== 'ValidationError') {\n                throw error;\n            }\n\n            return {\n                errors: (Object.keys(results.errors) as Array<keyof HostedInputValidateErrorDataMap>)\n                    .reduce((result, fieldType) => ({\n                        ...result,\n                        [fieldType]: (error as ValidationError).inner\n                            .filter(innerError => innerError.path === fieldType)\n                            .map(innerError => ({\n                                fieldType: innerError.path,\n                                message: innerError.errors.join(' '),\n                                type: innerError.type,\n                            })),\n                    }), {} as HostedInputValidateErrorDataMap),\n                isValid: false,\n            };\n        }\n    }\n\n    private _configureCardValidator(): void {\n        const discoverInfo = creditCardType.getTypeInfo('discover');\n        const visaInfo = creditCardType.getTypeInfo('visa');\n\n        // Need to support 13 digit PAN because some gateways only provide test credit card numbers in this format.\n        creditCardType.updateCard('visa', {\n            lengths: [13, ...(visaInfo.lengths || [])],\n        });\n\n        // Add support for 8-BIN Discover Cards.\n        creditCardType.updateCard('discover', {\n            patterns: [\n                ...(discoverInfo.patterns || []),\n                [810, 817],\n            ],\n        });\n    }\n\n    private _getCardCodeSchema(): StringSchema {\n        return string()\n            .required('CVV is required')\n            .test({\n                message: 'CVV must be valid',\n                name: 'invalid_card_code',\n                test(value) {\n                    const { card } = number((this.parent as HostedInputValues).cardNumber || '');\n\n                    return cvv(value, card && card.code ? card.code.size : undefined).isValid;\n                },\n            });\n    }\n\n    private _getCardCodeVerificationSchema(): StringSchema {\n        return string()\n            .required('CVV is required')\n            .test({\n                message: 'CVV must be valid',\n                name: 'invalid_card_code',\n                test: (value = '') => {\n                    const cardType = this._cardInstrument && this._mapFromInstrumentCardType(this._cardInstrument.brand);\n                    const cardInfo = cardType && creditCardType.getTypeInfo(cardType);\n\n                    return cvv(value, cardInfo && cardInfo.code ? cardInfo.code.size : undefined).isValid;\n                },\n            });\n    }\n\n    private _getCardExpirySchema(): StringSchema {\n        return string()\n            .required('Expiration date is required')\n            .test({\n                message: 'Expiration date must be a valid future date in MM / YY format',\n                name: 'invalid_card_expiry',\n                test: value => expirationDate(value).isValid,\n            });\n    }\n\n    private _getCardNameSchema(): StringSchema {\n        return string()\n            .max(200)\n            .required('Full name is required');\n    }\n\n    private _getCardNumberSchema(): StringSchema {\n        return string()\n            .required('Credit card number is required')\n            .test({\n                message: 'Credit card number must be valid',\n                name: 'invalid_card_number',\n                test: value => number(value).isValid,\n            });\n    }\n\n    private _getCardNumberVerificationSchema(): StringSchema {\n        return string()\n            .required('Credit card number is required')\n            .test({\n                message: 'Credit card number must be valid',\n                name: 'invalid_card_number',\n                test: (value = '') => number(value).isValid,\n            })\n            .test({\n                message: 'The card number entered does not match the card stored in your account',\n                name: 'mismatched_card_number',\n                test: (value = '') => this._cardInstrument ?\n                    value.slice(-this._cardInstrument.last4.length) === this._cardInstrument.last4 :\n                    false,\n            });\n    }\n\n    private _mapFromInstrumentCardType(type: string): string {\n        switch (type) {\n        case 'amex':\n        case 'american_express':\n            return 'american-express';\n\n        case 'diners':\n            return 'diners-club';\n\n        default:\n            return type;\n        }\n    }\n}\n","import { createClient as createBigpayClient } from '@bigcommerce/bigpay-client';\n\nimport { IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { PaymentRequestSender, PaymentRequestTransformer } from '../../payment';\nimport { CardInstrument } from '../../payment/instrument';\nimport HostedFieldType from '../hosted-field-type';\n\nimport CardExpiryFormatter from './card-expiry-formatter';\nimport CardNumberFormatter from './card-number-formatter';\nimport HostedAutocompleteFieldset from './hosted-autocomplete-fieldset';\nimport HostedCardExpiryInput from './hosted-card-expiry-input';\nimport HostedCardNumberInput from './hosted-card-number-input';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\nimport mapToAccessibilityLabel from './map-to-accessibility-label';\nimport mapToAutocompleteType from './map-to-autocomplete-type';\n\nexport default class HostedInputFactory {\n    constructor(\n        private _parentOrigin: string\n    ) {}\n\n    create(\n        form: HTMLFormElement,\n        type: HostedFieldType,\n        styles: HostedInputStylesMap = {},\n        fontUrls: string[] = [],\n        placeholder: string = '',\n        accessibilityLabel: string = mapToAccessibilityLabel(type),\n        cardInstrument?: CardInstrument\n    ): HostedInput {\n        const autocomplete = mapToAutocompleteType(type);\n\n        if (type === HostedFieldType.CardNumber) {\n            return this._createNumberInput(form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete);\n        }\n\n        if (type === HostedFieldType.CardNumberVerification) {\n            return this._createNumberInput(form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete, cardInstrument);\n        }\n\n        if (type === HostedFieldType.CardExpiry) {\n            return this._createExpiryInput(form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete);\n        }\n\n        if (type === HostedFieldType.CardCodeVerification) {\n            return this._createInput(type, form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete, cardInstrument);\n        }\n\n        return this._createInput(type, form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete);\n    }\n\n    private _createExpiryInput(\n        form: HTMLFormElement,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel: string = '',\n        autocomplete: string = ''\n    ): HostedCardExpiryInput {\n        return new HostedCardExpiryInput(\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(),\n            this._createPaymentHandler(),\n            new CardExpiryFormatter()\n        );\n    }\n\n    private _createNumberInput(\n        form: HTMLFormElement,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel: string = '',\n        autocomplete: string = '',\n        cardInstrument?: CardInstrument\n    ): HostedCardNumberInput {\n        return new HostedCardNumberInput(\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(cardInstrument),\n            this._createPaymentHandler(cardInstrument),\n            new HostedAutocompleteFieldset(\n                form,\n                [HostedFieldType.CardCode, HostedFieldType.CardExpiry, HostedFieldType.CardName],\n                new HostedInputAggregator(window.parent)\n            ),\n            new CardNumberFormatter()\n        );\n    }\n\n    private _createInput(\n        type: HostedFieldType,\n        form: HTMLFormElement,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel: string = '',\n        autocomplete: string = '',\n        cardInstrument?: CardInstrument\n    ): HostedInput {\n        return new HostedInput(\n            type,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(cardInstrument),\n            this._createPaymentHandler(cardInstrument)\n        );\n    }\n\n    private _createPaymentHandler(\n        cardInstrument?: CardInstrument\n    ): HostedInputPaymentHandler {\n        return new HostedInputPaymentHandler(\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(cardInstrument),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new PaymentRequestSender(createBigpayClient()),\n            new PaymentRequestTransformer()\n        );\n    }\n}\n","import HostedFieldType from '../hosted-field-type';\n\nexport default function mapToAccessibilityLabel(type: HostedFieldType): string {\n    switch (type) {\n    case HostedFieldType.CardCode:\n    case HostedFieldType.CardCodeVerification:\n        return 'CVC';\n\n    case HostedFieldType.CardExpiry:\n        return 'Expiration';\n\n    case HostedFieldType.CardName:\n        return 'Name on card';\n\n    case HostedFieldType.CardNumber:\n    case HostedFieldType.CardNumberVerification:\n        return 'Credit card number';\n    }\n}\n","import { fromEvent } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { IframeEventListener } from '../../common/iframe';\nimport { InvalidHostedFormConfigError } from '../errors';\nimport { HostedFieldAttachEvent, HostedFieldEventMap, HostedFieldEventType } from '../hosted-field-events';\n\nimport HostedInput from './hosted-input';\nimport HostedInputFactory from './hosted-input-factory';\n\ninterface EventTargetLike<TEvent> {\n    addListener(eventName: string, handler: (event: TEvent) => void): void;\n    removeListener(eventName: string, handler: (event: TEvent) => void): void;\n}\n\nexport default class HostedInputInitializer {\n    constructor(\n        private _factory: HostedInputFactory,\n        private _eventListener: IframeEventListener<HostedFieldEventMap>\n    ) {}\n\n    initialize(containerId: string): Promise<HostedInput> {\n        const form = this._createFormContainer(containerId);\n\n        this._resetPageStyles(containerId);\n        this._eventListener.listen();\n\n        return fromEvent<HostedFieldAttachEvent>(\n            this._eventListener as EventTargetLike<HostedFieldAttachEvent>,\n            HostedFieldEventType.AttachRequested\n        )\n            .pipe(\n                map(({ payload }) => {\n                    const { accessibilityLabel, cardInstrument, fontUrls, placeholder, styles, type } = payload;\n                    const field = this._factory.create(form, type, styles, fontUrls, placeholder, accessibilityLabel, cardInstrument);\n\n                    field.attach();\n\n                    return field;\n                }),\n                take(1)\n            )\n            .toPromise();\n    }\n\n    private _resetPageStyles(containerId: string) {\n        const html = document.querySelector('html');\n        const body = document.querySelector('body');\n        const container = document.getElementById(containerId);\n\n        [html, body, container]\n            .forEach(node => {\n                if (!node) {\n                    return;\n                }\n\n                node.style.height = '100%';\n                node.style.width = '100%';\n                node.style.overflow = 'hidden';\n                node.style.padding = '0';\n                node.style.margin = '0';\n            });\n    }\n\n    private _createFormContainer(containerId: string): HTMLFormElement {\n        const container = document.getElementById(containerId);\n\n        if (!container) {\n            throw new InvalidHostedFormConfigError('Unable to proceed because the provided container ID is not valid.');\n        }\n\n        const form = document.createElement('form');\n        const button = document.createElement('button');\n\n        form.noValidate = true;\n        form.style.height = '100%';\n        form.style.width = '100%';\n        button.style.display = 'none';\n\n        container.appendChild(form);\n        form.appendChild(button);\n\n        return form;\n    }\n}\n","import { IframeEventListener } from '../../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\n\nimport HostedInput from './hosted-input';\nimport HostedInputFactory from './hosted-input-factory';\nimport HostedInputInitializer from './hosted-input-initializer';\nimport HostedInputOptions from './hosted-input-options';\n\nexport default function initializeHostedInput(options: HostedInputOptions): Promise<HostedInput> {\n    const { containerId, parentOrigin } = options;\n    const initializer = new HostedInputInitializer(\n        new HostedInputFactory(parentOrigin),\n        new IframeEventListener<HostedFieldEventMap>(parentOrigin)\n    );\n\n    return initializer.initialize(containerId);\n}\n","import { IframeEventPoster } from '../../common/iframe';\n\nimport { HostedInputAttachErrorEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputInitializeErrorData from './hosted-input-initialize-error-data';\n\nconst poster = new IframeEventPoster<HostedInputAttachErrorEvent>('*', window.parent);\n\nexport default function notifyInitializeError(error: HostedInputInitializeErrorData): void {\n    poster.post({\n        type: HostedInputEventType.AttachFailed,\n        payload: { error },\n    });\n}\n","export { initializeHostedInput, notifyInitializeError } from '../hosted-form/iframe-content';\n","module.exports = require(\"lodash\");","import { setPrototypeOf } from '../../utility';\n\nimport CustomError from './custom-error';\n\n/**\n * This error type should not be constructed directly. It is a base class for\n * all custom errors thrown in this library.\n */\nexport default abstract class StandardError extends Error implements CustomError {\n    name = 'StandardError';\n    type = 'standard';\n\n    constructor(message?: string) {\n        super(message || 'An unexpected error has occurred.');\n\n        setPrototypeOf(this, new.target.prototype);\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, new.target);\n        } else {\n            this.stack = (new Error(this.message)).stack;\n        }\n    }\n}\n","export default function setPrototypeOf(object: any, prototype: object) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","module.exports = require(\"rxjs\");","module.exports = require(\"card-validator\");","import { FormattedPayload, FormattedVaultedInstrument, HostedVaultedInstrument, PaymentInstrument, VaultedInstrument } from './payment';\n\nexport default function isVaultedInstrument(instrument: PaymentInstrument): instrument is VaultedInstrument {\n    return Boolean((instrument as VaultedInstrument).instrumentId);\n}\n\nexport function isHostedVaultedInstrument(instrument: PaymentInstrument): instrument is HostedVaultedInstrument {\n    return (\n        Boolean((instrument as HostedVaultedInstrument).instrumentId) &&\n        !instrument.hasOwnProperty('ccNumber') &&\n        !instrument.hasOwnProperty('ccCvv')\n    );\n}\n\nexport function isFormattedVaultedInstrument(instrument: PaymentInstrument): instrument is FormattedPayload<FormattedVaultedInstrument> {\n    const formattedInstrument = (instrument as FormattedPayload<FormattedVaultedInstrument>).formattedPayload;\n\n    if (!formattedInstrument) {\n        return false;\n    }\n\n    return typeof formattedInstrument.bigpay_token === 'string' ||\n        Boolean(formattedInstrument.bigpay_token && formattedInstrument.bigpay_token.token);\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { PaymentErrorData, PaymentErrorResponseBody } from '../../common/error';\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputInitializeErrorData from './hosted-input-initialize-error-data';\nimport HostedInputValidateResults from './hosted-input-validate-results';\n\n// Event types\nexport enum HostedInputEventType {\n    AttachSucceeded = 'HOSTED_INPUT:ATTACH_SUCCEEDED',\n    AttachFailed = 'HOSTED_INPUT:ATTACH_FAILED',\n    BinChanged = 'HOSTED_INPUT:BIN_CHANGED',\n    Blurred = 'HOSTED_INPUT:BLURRED',\n    Changed = 'HOSTED_INPUT:CHANGED',\n    CardTypeChanged = 'HOSTED_INPUT:CARD_TYPE_CHANGED',\n    Entered = 'HOSTED_INPUT:ENTERED',\n    Focused = 'HOSTED_INPUT:FOCUSED',\n    SubmitSucceeded = 'HOSTED_INPUT:SUBMIT_SUCCEEDED',\n    SubmitFailed = 'HOSTED_INPUT:SUBMIT_FAILED',\n    Validated = 'HOSTED_INPUT:VALIDATED',\n}\n\n// Event mapping\nexport interface HostedInputEventMap {\n    [HostedInputEventType.AttachSucceeded]: HostedInputAttachSuccessEvent;\n    [HostedInputEventType.AttachFailed]: HostedInputAttachErrorEvent;\n    [HostedInputEventType.BinChanged]: HostedInputBinChangeEvent;\n    [HostedInputEventType.Blurred]: HostedInputBlurEvent;\n    [HostedInputEventType.Changed]: HostedInputChangeEvent;\n    [HostedInputEventType.CardTypeChanged]: HostedInputCardTypeChangeEvent;\n    [HostedInputEventType.Entered]: HostedInputEnterEvent;\n    [HostedInputEventType.Focused]: HostedInputFocusEvent;\n    [HostedInputEventType.SubmitSucceeded]: HostedInputSubmitSuccessEvent;\n    [HostedInputEventType.SubmitFailed]: HostedInputSubmitErrorEvent;\n    [HostedInputEventType.Validated]: HostedInputValidateEvent;\n}\n\n// Events\nexport type HostedInputEvent = (\n    HostedInputAttachSuccessEvent |\n    HostedInputAttachErrorEvent |\n    HostedInputBinChangeEvent |\n    HostedInputBlurEvent |\n    HostedInputChangeEvent |\n    HostedInputCardTypeChangeEvent |\n    HostedInputEnterEvent |\n    HostedInputFocusEvent |\n    HostedInputSubmitSuccessEvent |\n    HostedInputSubmitErrorEvent |\n    HostedInputValidateEvent\n);\n\nexport interface HostedInputAttachSuccessEvent {\n    type: HostedInputEventType.AttachSucceeded;\n}\n\nexport interface HostedInputAttachErrorEvent {\n    type: HostedInputEventType.AttachFailed;\n    payload: {\n        error: HostedInputInitializeErrorData;\n    };\n}\n\nexport interface HostedInputBinChangeEvent {\n    type: HostedInputEventType.BinChanged;\n    payload: {\n        bin?: string;\n    };\n}\n\nexport interface HostedInputBlurEvent {\n    type: HostedInputEventType.Blurred;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputChangeEvent {\n    type: HostedInputEventType.Changed;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputCardTypeChangeEvent {\n    type: HostedInputEventType.CardTypeChanged;\n    payload: {\n        cardType?: string;\n    };\n}\n\nexport interface HostedInputFocusEvent {\n    type: HostedInputEventType.Focused;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputEnterEvent {\n    type: HostedInputEventType.Entered;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputSubmitSuccessEvent {\n    type: HostedInputEventType.SubmitSucceeded;\n}\n\nexport interface HostedInputSubmitErrorEvent {\n    type: HostedInputEventType.SubmitFailed;\n    payload: {\n        error: PaymentErrorData;\n        response?: Response<PaymentErrorResponseBody>;\n    };\n}\n\nexport interface HostedInputValidateEvent {\n    type: HostedInputEventType.Validated;\n    payload: HostedInputValidateResults;\n}\n","import IframeEvent from './iframe-event';\n\nexport default function isIframeEvent<TEvent extends IframeEvent<TType>, TType extends string>(\n    object: any,\n    type: TType\n): object is TEvent {\n    return object.type === type;\n}\n","import StandardError from './standard-error';\n\n/**\n * This error should be thrown when a method is unable to proceed because the\n * caller has not provided all the arguments according to their requirements,\n * i.e.: if an argument is missing or it is not the expected data type.\n */\nexport default class InvalidArgumentError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Invalid arguments have been provided.');\n\n        this.name = 'InvalidArgumentError';\n        this.type = 'invalid_argument';\n    }\n}\n","export const HOSTED = 'PAYMENT_TYPE_HOSTED';\nexport const OFFLINE = 'PAYMENT_TYPE_OFFLINE';\n","import { isBillingAddressLike, BillingAddress } from '../billing';\nimport { Consignment } from '../shipping';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalAddress(\n    address: Address | BillingAddress,\n    consignments?: Consignment[]\n): InternalAddress<any> {\n    let addressId;\n\n    if (isBillingAddressLike(address)) {\n        addressId = address.id;\n    } else if (consignments && consignments.length) {\n        addressId = consignments[0].id;\n    }\n\n    return {\n        id: addressId,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        addressLine1: address.address1,\n        addressLine2: address.address2,\n        city: address.city,\n        province: address.stateOrProvince,\n        provinceCode: address.stateOrProvinceCode,\n        postCode: address.postalCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","import { Address } from '../address';\n\nimport BillingAddress from './billing-address';\n\nexport default function isBillingAddressLike(address: Address): address is BillingAddress {\n    const billingAddress = address as BillingAddress;\n\n    return typeof billingAddress.id !== 'undefined';\n}\n","import InternalLineItem from './internal-line-item';\nimport { LineItem } from './line-item';\nimport LineItemMap from './line-item-map';\nimport mapGiftCertificateToInternalLineItem from './map-gift-certificate-to-internal-line-item';\nimport mapToInternalLineItem from './map-to-internal-line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItems(\n    itemMap: LineItemMap,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem[] {\n    return (Object.keys(itemMap) as Array<keyof LineItemMap>)\n        .reduce((result, key) => [\n            ...result,\n            ...(itemMap[key] as LineItem[]).map((item: any) => {\n                if (key === 'giftCertificates') {\n                    return mapGiftCertificateToInternalLineItem(item, decimalPlaces);\n                }\n\n                return mapToInternalLineItem(\n                    item,\n                    mapToInternalLineItemType(key),\n                    decimalPlaces,\n                    idKey\n                );\n            }),\n        ], [] as InternalLineItem[]);\n}\n\nfunction mapToInternalLineItemType(type: string): string {\n    switch (type) {\n        case 'physicalItems':\n            return 'ItemPhysicalEntity';\n\n        case 'digitalItems':\n            return 'ItemDigitalEntity';\n\n        case 'giftCertificates':\n            return 'ItemGiftCertificateEntity';\n\n        default:\n            return '';\n    }\n}\n","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { GiftCertificateItem } from './line-item';\n\nexport default function mapGiftCertificateToInternalLineItem(\n    item: GiftCertificateItem,\n    decimalPlaces: number\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: item.id,\n        imageUrl: '',\n        name: item.name,\n        amount: item.amount,\n        amountAfterDiscount: item.amount,\n        discount: 0,\n        integerAmount: amountTransformer.toInteger(item.amount),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerUnitPrice: amountTransformer.toInteger(item.amount),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerDiscount: 0,\n        quantity: 1,\n        sender: item.sender,\n        recipient: item.recipient,\n        type: 'ItemGiftCertificateEntity',\n        attributes: [],\n        variantId: null,\n    };\n}\n","import { CardInstrument } from '../payment/instrument';\n\nimport HostedFieldType from './hosted-field-type';\nimport { HostedFieldStylesMap } from './hosted-form-options';\nimport HostedFormOrderData from './hosted-form-order-data';\n\nexport enum HostedFieldEventType {\n    AttachRequested = 'HOSTED_FIELD:ATTACH_REQUESTED',\n    SubmitRequested = 'HOSTED_FIELD:SUBMITTED_REQUESTED',\n    ValidateRequested = 'HOSTED_FIELD:VALIDATE_REQUESTED',\n}\n\nexport interface HostedFieldEventMap {\n    [HostedFieldEventType.AttachRequested]: HostedFieldAttachEvent;\n    [HostedFieldEventType.SubmitRequested]: HostedFieldSubmitRequestEvent;\n    [HostedFieldEventType.ValidateRequested]: HostedFieldValidateRequestEvent;\n}\n\nexport type HostedFieldEvent = (\n    HostedFieldAttachEvent |\n    HostedFieldSubmitRequestEvent |\n    HostedFieldValidateRequestEvent\n);\n\nexport interface HostedFieldAttachEvent {\n    type: HostedFieldEventType.AttachRequested;\n    payload: {\n        accessibilityLabel?: string;\n        cardInstrument?: CardInstrument;\n        fontUrls?: string[];\n        placeholder?: string;\n        styles?: HostedFieldStylesMap;\n        type: HostedFieldType;\n    };\n}\n\nexport interface HostedFieldSubmitRequestEvent {\n    type: HostedFieldEventType.SubmitRequested;\n    payload: {\n        data: HostedFormOrderData;\n        fields: HostedFieldType[];\n    };\n}\n\nexport interface HostedFieldValidateRequestEvent {\n    type: HostedFieldEventType.ValidateRequested;\n}\n","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { DigitalItem, LineItem } from './line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItem(\n    item: LineItem,\n    type: string,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: (item[idKey] as string | number),\n        imageUrl: item.imageUrl,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        discount: item.discountAmount,\n        integerAmount: amountTransformer.toInteger(item.extendedListPrice),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.extendedSalePrice),\n        integerDiscount: amountTransformer.toInteger(item.discountAmount),\n        integerUnitPrice: amountTransformer.toInteger(item.listPrice),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.salePrice),\n        downloadsPageUrl: (item as DigitalItem).downloadPageUrl,\n        name: item.name,\n        quantity: item.quantity,\n        brand: item.brand,\n        sku: item.sku,\n        categoryNames: item.categoryNames,\n        variantId: item.variantId,\n        productId: item.productId,\n        attributes: (item.options || []).map(option => ({\n            name: option.name,\n            value: option.value,\n        })),\n        addedByPromotion: item.addedByPromotion,\n        type,\n    };\n}\n","import InternalShippingOption from './internal-shipping-option';\nimport ShippingOption from './shipping-option';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalShippingOption(option: ShippingOption, isSelected: boolean): InternalShippingOption {\n    return {\n        description: option.description,\n        module: option.type,\n        price: option.cost,\n        id: option.id,\n        selected: isSelected,\n        isRecommended: option.isRecommended,\n        imageUrl: option.imageUrl,\n        transitTime: option.transitTime,\n    };\n}\n","export default class AmountTransformer {\n    constructor(private _decimalPlaces: number) {}\n\n    toInteger(amount: number): number {\n        return Math.round(amount * Math.pow(10, this._decimalPlaces));\n    }\n}\n","module.exports = require(\"rxjs/operators\");","import { InvalidArgumentError } from '../error/errors';\n\nimport Url from './url';\n\nexport default function parseUrl(url: string): Url {\n    if (!/^(https?:)?\\/\\//.test(url)) {\n        throw new InvalidArgumentError('The provided URL must be absolute.');\n    }\n\n    // new URL() is not supported in IE11, use anchor tag instead\n    const anchor = document.createElement('a');\n\n    anchor.href = url;\n\n    // IE11 returns 80 or 443 for the port number depending on the URL scheme,\n    // even if the port number is not specified in the URL.\n    const port = anchor.port && url.indexOf(`${anchor.hostname}:${anchor.port}`) !== -1 ?\n        anchor.port :\n        '';\n\n    return {\n        hash: anchor.hash,\n        hostname: anchor.hostname,\n        href: anchor.href,\n        origin: `${anchor.protocol}//${anchor.hostname}${port ? ':' + port : ''}`,\n        pathname: anchor.pathname,\n        port,\n        protocol: anchor.protocol,\n        search: anchor.search,\n    };\n}\n","module.exports = require(\"yup\");","/**\n * Decorates a class or a method by binding all its prototype methods or itself\n * to the calling instance respectively.\n */\nfunction bindDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>;\nfunction bindDecorator<T extends Constructor<object>>(target: T): T;\nfunction bindDecorator(target: any, key?: any, descriptor?: any): any {\n    if (!key || !descriptor) {\n        return bindClassDecorator(target);\n    }\n\n    return bindMethodDecorator(target, key, descriptor);\n}\n\nexport default bindDecorator;\n\n/**\n * Decorates a class by binding all its prototype methods to the calling\n * instance.\n */\nexport function bindClassDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype)\n        .forEach(key => {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n            if (!descriptor || key === 'constructor') {\n                return;\n            }\n\n            Object.defineProperty(\n                decoratedTarget.prototype,\n                key,\n                bindMethodDecorator(target.prototype, key, descriptor)\n            );\n        });\n\n    return decoratedTarget;\n}\n\n/**\n * Decorates a method by binding it to the calling instance.\n */\nexport function bindMethodDecorator<T extends Method>(_: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let method: T = descriptor.value;\n\n    return {\n        get() {\n            const boundMethod = method.bind(this) as T;\n\n            Object.defineProperty(this, key, {\n                ...descriptor,\n                value: boundMethod,\n            });\n\n            return boundMethod;\n        },\n        set(value) {\n            method = value;\n        },\n    };\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\nexport type Method = (...args: any[]) => any;\n","import { mapToInternalAddress } from '../address';\nimport { BillingAddress } from '../billing';\n\nimport { Customer } from '.';\nimport InternalCustomer from './internal-customer';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCustomer(customer: Customer, billingAddress: BillingAddress): InternalCustomer {\n    const firstName = customer.firstName || billingAddress.firstName || '';\n    const lastName = customer.lastName || billingAddress.lastName || '';\n\n    return {\n        addresses: (customer.addresses || []).map(address => mapToInternalAddress(address)),\n        customerId: customer.id,\n        isGuest: customer.isGuest,\n        storeCredit: customer.storeCredit,\n        email: customer.email || billingAddress.email || '',\n        firstName,\n        lastName,\n        name: customer.fullName || [firstName, lastName].join(' '),\n        customerGroupName: customer.customerGroup && customer.customerGroup.name,\n    };\n}\n","import { filter, find, keyBy, reduce } from 'lodash';\n\nimport { mapToInternalLineItems, LineItem } from '../cart';\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon } from '../coupon';\nimport { HOSTED } from '../payment';\n\nimport InternalOrder, { InternalGiftCertificateList, InternalIncompleteOrder, InternalOrderPayment, InternalSocialDataList } from './internal-order';\nimport Order, { GatewayOrderPayment, GiftCertificateOrderPayment, OrderPayment, OrderPayments } from './order';\nimport { OrderMetaState } from './order-state';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalOrder(order: Order, orderMeta: OrderMetaState = {}): InternalOrder {\n    const decimalPlaces = order.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: order.orderId,\n        items: mapToInternalLineItems(order.lineItems, order.currency.decimalPlaces, 'productId'),\n        orderId: order.orderId,\n        currency: order.currency.code,\n        customerCanBeCreated: order.customerCanBeCreated,\n        payment: mapToInternalOrderPayment(order.payments, orderMeta.payment),\n        subtotal: {\n            amount: order.baseAmount,\n            integerAmount: amountTransformer.toInteger(order.baseAmount),\n        },\n        coupon: {\n            discountedAmount: reduce(order.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: order.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: order.discountAmount,\n            integerAmount: amountTransformer.toInteger(order.discountAmount),\n        },\n        token: orderMeta.orderToken,\n        callbackUrl: orderMeta.callbackUrl,\n        discountNotifications: [],\n        giftCertificate: mapToGiftCertificates(order.payments),\n        socialData: mapToInternalSocialDataList(order),\n        status: order.status,\n        hasDigitalItems: order.hasDigitalItems,\n        isDownloadable: order.isDownloadable,\n        isComplete: order.isComplete,\n        shipping: {\n            amount: order.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.shippingCostTotal),\n            amountBeforeDiscount: order.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(order.shippingCostBeforeDiscount),\n        },\n        storeCredit: {\n            amount: mapToStoreCredit(order.payments),\n        },\n        taxes: order.taxes,\n        taxTotal: {\n            amount: order.taxTotal,\n            integerAmount: amountTransformer.toInteger(order.taxTotal),\n        },\n        handling: {\n            amount: order.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: order.orderAmount,\n            integerAmount: order.orderAmountAsInteger,\n        },\n    };\n}\n\nexport function mapToInternalIncompleteOrder(checkout: Checkout): InternalIncompleteOrder {\n    const payment = find(checkout.payments, { providerType: HOSTED });\n\n    return {\n        orderId: null,\n        isComplete: false,\n        payment: !payment ? {} : {\n            id: payment.providerId,\n            gateway: payment.gatewayId,\n            status: mapToInternalPaymentStatus(payment.detail.step),\n        },\n    };\n}\n\nfunction mapToInternalPaymentStatus(status: string): string {\n    return `PAYMENT_STATUS_${status}`;\n}\n\nfunction mapToStoreCredit(payments?: OrderPayments): number {\n    const item = find(payments, { providerId: 'storecredit' });\n\n    return item ? item.amount : 0;\n}\n\nfunction mapToGiftCertificates(payments?: OrderPayments): InternalGiftCertificateList {\n    const items = filter(payments, { providerId: 'giftcertificate' }) as GiftCertificateOrderPayment[];\n\n    return {\n        totalDiscountedAmount: reduce(items, (sum, item) => item.amount + sum, 0),\n        appliedGiftCertificates: keyBy(items.map(item => ({\n            code: item.detail.code,\n            discountedAmount: item.amount,\n            remainingBalance: item.detail.remaining,\n            giftCertificate: {\n                balance: item.amount + item.detail.remaining,\n                code: item.detail.code,\n                purchaseDate: '',\n            },\n        })), 'code'),\n    };\n}\n\nfunction mapToInternalOrderPayment(payments?: OrderPayments, payment: InternalOrderPayment = {}): InternalOrderPayment {\n    const item = find(payments, isDefaultOrderPayment) as GatewayOrderPayment;\n\n    if (!item) {\n        return {};\n    }\n\n    return {\n        id: item.providerId,\n        status: mapToInternalPaymentStatus(item.detail.step),\n        helpText: item.detail.instructions,\n        returnUrl: payment.returnUrl,\n    };\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return payment.providerId !== 'giftcertificate' && payment.providerId !== 'storecredit';\n}\n\nfunction mapToInternalSocialDataList(order: Order): { [itemId: string]: InternalSocialDataList } | undefined {\n    const socialDataObject: { [itemId: string]: InternalSocialDataList } = {};\n    const items = [\n        ...order.lineItems.physicalItems,\n        ...order.lineItems.digitalItems,\n    ];\n\n    items.forEach(item => {\n        socialDataObject[item.id] = mapToInternalSocialData(item);\n    });\n\n    return socialDataObject;\n}\n\nfunction mapToInternalSocialData(lineItem: LineItem): InternalSocialDataList {\n    const codes = ['fb', 'tw', 'gp'];\n\n    return codes.reduce((socialData, code) => {\n        const item = lineItem.socialMedia && find(lineItem.socialMedia, item => item.code === code);\n\n        if (!item) {\n            return socialData;\n        }\n\n        socialData[code] = {\n            name: lineItem.name,\n            description: lineItem.name,\n            image: lineItem.imageUrl,\n            url: item.link,\n            shareText: item.text,\n            sharingLink: item.link,\n            channelName: item.channel,\n            channelCode: item.code,\n        };\n\n        return socialData;\n    }, {} as InternalSocialDataList);\n}\n","import { keyBy, reduce, some } from 'lodash';\n\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon, mapToInternalGiftCertificate } from '../coupon';\nimport { mapToDiscountNotifications } from '../promotion';\n\nimport InternalCart from './internal-cart';\nimport mapToInternalLineItems from './map-to-internal-line-items';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCart(checkout: Checkout): InternalCart {\n    const decimalPlaces = checkout.cart.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: checkout.cart.id,\n        items: mapToInternalLineItems(checkout.cart.lineItems, decimalPlaces),\n        currency: checkout.cart.currency.code,\n        coupon: {\n            discountedAmount: reduce(checkout.cart.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: checkout.cart.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: checkout.cart.discountAmount,\n            integerAmount: amountTransformer.toInteger(checkout.cart.discountAmount),\n        },\n        discountNotifications: mapToDiscountNotifications(checkout.promotions),\n        giftCertificate: {\n            totalDiscountedAmount: reduce(checkout.giftCertificates, (sum, certificate) => {\n                return sum + certificate.used;\n            }, 0),\n            appliedGiftCertificates: keyBy(checkout.giftCertificates.map(mapToInternalGiftCertificate), 'code'),\n        },\n        shipping: {\n            amount: checkout.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.shippingCostTotal),\n            amountBeforeDiscount: checkout.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(checkout.shippingCostBeforeDiscount),\n            required: some(checkout.cart.lineItems.physicalItems, lineItem => lineItem.isShippingRequired),\n        },\n        subtotal: {\n            amount: checkout.subtotal,\n            integerAmount: amountTransformer.toInteger(checkout.subtotal),\n        },\n        storeCredit: {\n            amount: checkout.customer ? checkout.customer.storeCredit : 0,\n        },\n        taxSubtotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        taxes: checkout.taxes,\n        taxTotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        handling: {\n            amount: checkout.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: checkout.grandTotal,\n            integerAmount: amountTransformer.toInteger(checkout.grandTotal),\n        },\n    };\n}\n","import { DiscountNotification } from '../discount';\n\nimport { Promotion } from '.';\n\nexport default function mapToDiscountNotifications(promotions?: Promotion[]): DiscountNotification[] {\n    const notifications: DiscountNotification[] = [];\n\n    (promotions || []).forEach(promotion => {\n        (promotion.banners || []).forEach(banner => {\n            notifications.push({\n                placeholders: [],\n                discountType: null,\n                message: '',\n                messageHtml: banner.text,\n            });\n        });\n    });\n\n    return notifications;\n}\n","module.exports = require(\"@bigcommerce/bigpay-client\");","import CardExpiryDate from './card-expiry-date';\n\nconst NUMBER_SEPARATOR = '/';\n\nexport default class CardExpiryFormatter {\n    format(value: string): string {\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\n        const trimmedMonth = month.slice(0, 2);\n        const trimmedYear = year.length === 4 ? year.slice(-2) : (year ? year.slice(0, 2) : month.slice(2));\n\n        // i.e.: '1'\n        if (value.length < 2) {\n            return month;\n        }\n\n        // ie.: '10 /' (without trailing space)\n        if (value.length > 3 && !trimmedYear) {\n            return trimmedMonth;\n        }\n\n        return `${trimmedMonth} ${NUMBER_SEPARATOR} ${trimmedYear}`;\n    }\n\n    toObject(value: string): CardExpiryDate {\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\n\n        if (!/^\\d+$/.test(month) || !/^\\d+$/.test(year)) {\n            return { month: '', year: '' };\n        }\n\n        return {\n            month: month.length === 1 ? `0${month}` : month.slice(0, 2),\n            year: year.length === 2 ? `20${year}` : year.slice(0, 4),\n        };\n    }\n}\n","import { creditCardType, number } from 'card-validator';\nimport { max } from 'lodash';\n\nconst NUMBER_SEPARATOR = ' ';\n\nexport default class CardNumberFormatter {\n    format(value: string): string {\n        const { card } = number(value);\n\n        if (!card) {\n            return value;\n        }\n\n        const maxLength = max(creditCardType(value).map(info => max(info.lengths)));\n        const unformattedValue = this.unformat(value).slice(0, maxLength);\n\n        return card.gaps\n            .filter(gapIndex => unformattedValue.length > gapIndex)\n            .reduce((output, gapIndex, index) => (\n                [\n                    output.slice(0, gapIndex + index),\n                    output.slice(gapIndex + index),\n                ].join(NUMBER_SEPARATOR)\n            ), unformattedValue);\n    }\n\n    unformat(value: string): string {\n        const { card } = number(value);\n\n        if (!card) {\n            return value;\n        }\n\n        return value.replace(new RegExp(NUMBER_SEPARATOR, 'g'), '');\n    }\n}\n"],"sourceRoot":""}